===================
 pygobject学习笔记
===================

.. contents ::

概述
====

pygobject主要包括几个主要对象(注意区分大小写)：

GObject

Gio

GLib

Gtk

Gdk

Pango

从gtk 2.0版本开始，信号系统就从Gtk中移到了GLib中。


环境设置
========

按照 https://live.gnome.org/DeveloperTools/Installation 上面的设置环境，
安装必要的软件。

参考 http://developer.gnome.org/

参考文档
========

pygobject目前还没有完善的文档，需要时可以参考以下文档：

- python gtk3 tutorial

  http://python-gtk-3-tutorial.readthedocs.org/en/latest/index.html

  入门教程

- gtk+ Reference Manual

  http://developer.gnome.org/gtk3/stable/

  主要参考手册

- GObject Reference Manual

  http://developer.gnome.org/gobject/stable/index.html

  仅次于gtk+手册，偏底层一些，有时需要查看。

- PyGObject Reference Manual

  http://developer.gnome.org/pygobject/2.28/

  这是上面的GObject手册的python版本，有时需要看。

- Gdk Reference Manual

  http://developer.gnome.org/gdk3/stable/

- GTK+ 2.0 Tutorial

  http://developer.gnome.org/gtk-tutorial

  另一个教程，有中文版，比上面那个教程稍微详细点。

- GTK+ FAQ

  http://developer.gnome.org/gtk-faq/

- GTK官方网站的文档

  http://www.gtk.org/documentation.php

  这里有一些杂七杂八的其他文档，一堆……。

- GTK+程序设计教程

  http://zetcode.com/tutorials/gtktutorial/chinese/

  另一个gtk教程的中文版。

Gtk+手册上的函数和变量名称的转换规则
====================================

- 不清楚时可以先google代码，例如不清楚函数set_position的参数时可以
  google：

  ::

    "from gi.repository import Gtk set_position"。

- 枚举

  注意pygobject中的枚举的最后一部分一定是大写，最后一部分如果由几个单词
  组成，则用下划线连接。

  ::

    Gtk.WindowPosition.CENTER

  ::

    typedef enum {
      GTK_WIN_POS_NONE,
      GTK_WIN_POS_CENTER,
      GTK_WIN_POS_MOUSE,
      GTK_WIN_POS_CENTER_ALWAYS,
      GTK_WIN_POS_CENTER_ON_PARENT
    } GtkWindowPosition;

  ::

    Gdk.EventType.BUTTON_PRESS

  ::

    typedef enum {
      GDK_NOTHING		= -1,
      GDK_DELETE		= 0,
      GDK_DESTROY		= 1,
      GDK_EXPOSE		= 2,
      GDK_MOTION_NOTIFY = 3,
      GDK_BUTTON_PRESS = 4,
      GDK_2BUTTON_PRESS = 5,
      GDK_3BUTTON_PRESS = 6,
      GDK_BUTTON_RELEASE = 7,
      GDK_KEY_PRESS		= 8,
      GDK_KEY_RELEASE = 9,
      GDK_ENTER_NOTIFY = 10,
      GDK_LEAVE_NOTIFY = 11,
      GDK_FOCUS_CHANGE = 12,
      GDK_CONFIGURE		= 13,
      GDK_MAP		= 14,
      GDK_UNMAP		= 15,
      GDK_PROPERTY_NOTIFY = 16,
      GDK_SELECTION_CLEAR = 17,
      GDK_SELECTION_REQUEST = 18,
      GDK_SELECTION_NOTIFY = 19,
      GDK_PROXIMITY_IN = 20,
      GDK_PROXIMITY_OUT = 21,
      GDK_DRAG_ENTER        = 22,
      GDK_DRAG_LEAVE        = 23,
      GDK_DRAG_MOTION       = 24,
      GDK_DRAG_STATUS       = 25,
      GDK_DROP_START        = 26,
      GDK_DROP_FINISHED     = 27,
      GDK_CLIENT_EVENT = 28,
      GDK_VISIBILITY_NOTIFY = 29,
      GDK_SCROLL            = 31,
      GDK_WINDOW_STATE      = 32,
      GDK_SETTING           = 33,
      GDK_OWNER_CHANGE      = 34,
      GDK_GRAB_BROKEN       = 35,
      GDK_DAMAGE            = 36,
      GDK_TOUCH_BEGIN       = 37,
      GDK_TOUCH_UPDATE      = 38,
      GDK_TOUCH_END         = 39,
      GDK_TOUCH_CANCEL      = 40,
      GDK_EVENT_LAST        /* helper variable for decls */
    } GdkEventType;

- Gtk手册中有些函数有new_with_label()，在python中可以去掉new_with_label。

  Gtk.Button('button 1') 相当于 Gtk.Button.new_with_button('button 1')

- Gtk手册中的的命名规则。

  - 信号名都是以::开头的，多个词之间用-链接
  - 属性都是以:开头的。


Tree and List Widgets
=====================

Gtk.TreeView
Gtk.ListView

Gtk.TreeModel
Gtk.ListModel

Gtk.TreeStore
Gtk.ListStore

----

Gtk.TreeIter
Gtk.TreePath

----

Gtk.CellRender
Gtk.TreeViewColumn

----

Gtk.TreeSelection
Gtk.TreeSortable


注意事项&小技巧
===============

- 主动发送一个信号: GObject.emit()

  但是貌似只能给当前widget发送，也就是给自己发送信号，pygobject中没有
  g_signal_emit_by_name()这个函数。

- 传递stock参数时，不能用引号，因为实际上它是一个数字常量。

- 每个控件的同一信号可以绑定到几个不同的处理函数，当触发这个信号时，这
  些函数会按照绑定顺序挨个执行。

- 几个版本的connect函数的区别：

  g_signal_connect(instance, detailed_signal, c_handler, data)

    这个是最常用的

  g_signal_connect_after(instance, detailed_signal, c_handler, data)

    类似于g_signal_connect()，不同的是这里设置的回调函数只有在执行完
    signal默认的回调函数之后才能得到执行。

  g_signal_connect_swapped(instance, detailed_signal, c_handler, data)

    类似于g_signal_connect()，不过在调用时会交换instance和data的位置，所
    以回调函数应该写成下面这个样子：

    ::

      void callback_func( data, ... /* other signal arguments */, instance);

  g_signal_connect_object (gpointer instance, \
                           const gchar *detailed_signal, \
                           GCallback c_handler, \
                           gpointer gobject, \
                           GConnectFlags connect_flags)

- 如何清空gtk_combo_box_new_with_entry或者gtk_combo_box_text中当前输入的文本？

  先用gtk_bin_get_child()取得gtk_entry，然后set_text('')即可

- pressed 信号和 clicked 信号不一样，鼠标点击会触发这两个信号，但如果只
  用键盘的话只能触发 clicked 信号。

.. - 让listview自动选中一行

..   ::

..     self.listview.get_selection().set_mode(Gtk.SelectionMode.BROWSE)

- entry也有'changed'信号

- Gtk.TreeView选择一行的时候会触发GtkTreeSelection::changed信号

  信号函数如下：

  ::

    def on_listselection_changed(self, data):
        store, iter = self.listselection.get_selected()
        print(self.store.get_value(iter, 0))
